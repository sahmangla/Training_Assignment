1. What is Validation in Client Side Programming? 
Client-side validation is an initial check and an important feature of good user experience; by catching invalid data on the 
client-side, the user can fix it straight away. If it gets to the server and is then rejected, a noticeable delay is caused 
by a round trip to the server and then back to the client-side to tell the user to fix their data.


2. What are the advantages of performing Validations?
a) Compatibility
If you are running an un-validated website you cannot be certain that your website's design is rendering correctly (or 
uniformly) in different browsers. For example, Internet Explorer is more forgiving than many other browsers and may ignore 
unclosed tags etc that could otherwise cause a page to display incorrectly. Web site validation techniques help ensure your 
code is correct and will work on as many browers as possible - this is what makes a good website.
b) SEO
By validating you are making your code behind the website as clean and uncluttered as possible. Cleaner code is easier for 
search engines to 'read through' and will increase the chances of being read the whole way. This will, in turn, allow them to 
extract more information about your website, understand your services better and perhaps see your website as being more 
authoritive than others. The more authorative websites command higher search engine positions.
c) Accessibility
Validating your website means you are being made to use many techniques that aid the accessibility (catering for users with 
a disability) of your site. As a very basic example, a validated website will not allow an image without an ALT attribute 
and ALT attributes are important for use with screen readers (which a user with a visionary impairment may use to 'read out' 
a website to them). A validated website does not instantly mean your website is 100% accessible but it is a very good place 
to start and build upon.


3. What is querystring in web pages?
Query String is a group of keywords that send request to the web server. These requests are used to pass information 
(parameters) from one page to another and you can access those information in receiving page. It containing in the HTTP 
requests for a specific URL.


4. What is <input type="hidden"  />  ? Why do we use?
A hidden field lets web developers include data that cannot be seen or modified by users when a form is submitted.
a. Basically hidden fields will be more useful and advantages to use with multi step form.
b. We can use hidden fields to pass one step information to next step using hidden and keep it forwarding till the end step.


5. Diff. between  <input type="submit"  />   and <button></button>  ?
a. <button type="submit"></button> buttons will not submit a form - they don't do anything by default. Button won't submit 
form on its own.It is a simple button which is used to perform some operation by using javascript whereas <input type="Submit" 
is a kind of button which by default submit the form whenever user clicks on submit button.
b. <button type="submit"> are nearly the same as <input type="submit"> but buttons are able to contain HTML content.




